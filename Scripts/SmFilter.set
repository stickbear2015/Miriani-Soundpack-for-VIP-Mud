#Class SmFilterClass Disable

#Var SmAliases {
a:Artifacts
ac:Accelerators
acc:Accelerators
ar:Artifacts
art:Artifacts
arti:Artifacts
as:Asteroids
ast:Asteroids
aster:Asteroids
b:Blockades
beacon:Control Beacons
beacons:Control Beacons
bl:Blockades
blo:Blockades
block:Blockades
c:Combat Drones
co:Combat Drones
com:Combat Drones
combat:Combat Drones
d:Debris
de:Debris
deb:Debris
debr:Debris
dr:Combat Drones
drone:Combat Drones
drones:Combat Drones
i:Interdictors
in:Interdictors
int:Interdictors
inter:Interdictors
j:Jumpgates
ju:Jumpgates
jum:Jumpgates
jump:Jumpgates
mis:Missiles
miss:Missiles
mo:Moons
moo:Moons
moon:Moons
p:Planets
pl:Planets
plan:Planets
planet:Planets
pr:Proximity Weapons
pri:Private Space Stations
priv:Private Space Stations
private:Private Space Stations
pro:Proximity Weapons
prob:Satellites
probe:Satellites
probes:Satellites
prox:Proximity Weapons
proximity:Proximity Weapons
roid:Asteroids
roids:Asteroids
s:Starships
sat:Satellites
sh:Starships
ship:Starships
ships:Starships
sp:Space Stations
space:Space Stations
star:Stars
starship:Starships
stat:Space Stations
stati:Space Stations
statio:Space Stations
station:Space Stations
u:Unknown
un:Unknown
unk:Unknown
v:Satellites
vid:Satellites
video:Satellites
video probe:Satellites
w:Wormholes
weapon:Proximity Weapons
weapons:Proximity Weapons
wo:Wormholes
worm:Wormholes
}

#Var SMSPriorityList {mugatra|bezation|resa-onati|potate|ohaxx|muzano|onati|onno|onz|orta|otono|otona}
#Var SMSRange {1}
#Alias smp {#Exec {#Alarm 0 {sm ships Praelor}}} {Starship}
#Alias SMPri {
 #If {%1=""} {
  #Say {SMS priority list:%CRLF @SMSPriorityList}
 } {
  #Var SMSPriorityList {%Trim(%0)};
  #Say {Done}
 }
}
#Alias SMRange {
 #If {%IsNumber(%1)=0} {
  #Say {SMS range: @SMSRange}
 } {
  #Var SMSRange {%1};
  #Say {Done}
 }
}

#Var SmShowCoords 0
#Var SmCount 0
#Alias sma {
 #If {%Defined(LastProxianiMessage)=1} {
  #Exec {smships assess%RTrim( %0)}
 } {
  #Say {This feature is only available when using Proxiani.}
 }
}
#Alias smc {
 #If {%Defined(LastProxianiMessage)=1} {
  #Exec {smships coords%RTrim( %0)}
 } {
  #Var SmShowCoords 1;
  #Exec {#Alarm 0 {sm ships {%Trim(%0)}}}
 }
}
#Alias smd {
 #If {%Defined(LastProxianiMessage)=1} {
  #Exec {smships dir%RTrim( %0)}
 } {
  #Say {This feature is only available when using Proxiani.}
 }
}
#Alias smf {
 #Var SmShowCoords 1;
 #If {%0<>""} {#Var SmSearchString {%Trim(%0)}};
 #Exec {#Alarm 0 {sm ships {@SmSearchString}}}
}
#Alias sms {
 #If {%Defined(LastProxianiMessage)=1} {
  #Exec {smships name%RTrim( %0)}
 } {
  #Exec {#Alarm 0 {sm ships {%Trim(%0)}}}
 }
}
#Alias smt {
 #If {%Defined(LastProxianiMessage)=1} {
  #Exec {smships count%RTrim( %0)}
 } {
  #Var SmCount 1;
  #Exec {#Alarm 0 {sm ships {%Trim(%0)}}}
 }
}
#Alias SMCo {
 #Say {Please use the smt command instead.}
}
#Alias SMCount {
 #Say {Please use the smt command instead.}
}
#Alias sm {
 #Var SmFilter {%Proper(%1)};
 #If {@SmFilter = "Help" or @SmFilter = "H"} {
  ConfPrint {You can use aliases with sm filter.
The object seperator is the same as that in Atsm, and can be changed in Conf Manager.
Here is the entire list of SmFilter aliases:
%Replace(%Replace(@SmAliases,:, matches to ),%CRLF,.%CRLF)};
  #Abort
 };
 #If {%Length(@SmFilter)>0 and @ZoneType="starship" and @Powered=1} {
  #Var SmFilterTmp1 {%Pos(@SmFilter:,@SmAliases)};
  #If {@SmFilterTmp1>0} {
   #Var SmFilter {%Copy(@SmAliases,@SmFilterTmp1+1)};
   #Var SmFilter {%Word(@SmFilter,%CRLF,1)};
   #Var SmFilter {%Word(@SmFilter,:,2)}
  };
  #Var SmSearchString {%2};
  #Var ObjectDirs {};
  #Var ObjectList {};
  MainTrigSwitch 0 SmFilterClass
 };
 ~sm
} {NotProxiani}

; Syntax: CalculateRelativeNumericDir TargetX TargetY TargetZ CurrentX CurrentY CurrentZ
#Alias CalculateRelativeNumericDir {
 #Var RelativeNumericDir {};
 #Math RelativeNumericTmpX {%Max(%1,%4)-%Min(%1,%4)};
 #Math RelativeNumericTmpY {%Max(%2,%5)-%Min(%2,%5)};
 #Math RelativeNumericTmpZ {%Max(%3,%6)-%Min(%3,%6)};
 #If {@RelativeNumericTmpX>0} {#Var RelativeNumericDir {@RelativeNumericTmpX%If(%1>%4,e,w)}};
 #If {@RelativeNumericTmpY>0} {#Var RelativeNumericDir {@RelativeNumericDir @RelativeNumericTmpY%If(%2>%5,s,n)}};
 #If {@RelativeNumericTmpZ>0} {#Var RelativeNumericDir {@RelativeNumericDir @RelativeNumericTmpZ%If(%3>%6,d,u)}};
 #If {%Length(@RelativeNumericDir)>0} {
  #Var RelativeNumericDir {%LTrim(@RelativeNumericDir)};
  #If {@RelativeNumericTmpX<2 and @RelativeNumericTmpY<2 and @RelativeNumericTmpZ<2} {#Var RelativeNumericDir {%Replace(@RelativeNumericDir,1,)}}
 } {#Var RelativeNumericDir C}
}

#Trigger {a* starship simulator (Unclaimed)*} {#GagLine 1 All} {SmFilterClass}
#Trigger {Simulated * (Unclaimed)*} {#GagLine 1 All} {SmFilterClass}
#Trigger {*: *} {
 #If {%IfWord(%1,Current Coordinates,|)=1} {
  MainTrigSwitch 1;
  #If {%Length(@ObjectList)=0} {
   #Sub {@SmFilter not found.};
   #Var SmShowCoords 0;
   #Var SmCount 0
  } {
   #GagLine 1 All;
   SmFilterProcessData {%2}
  }
 } {
  #If {%IfWord(%1,Accelerators|Artifacts|Asteroids|Blockades|Combat Drones|Control Beacons|Debris|Dry Docks|Interdictors|Jumpgates|Missiles|Mobile Platforms|Moons|Pellets|Planets|Private Space Stations|Proximity Weapons|Relics|Satellites|Space Stations|Stars|Starships|Unknown|Wormholes,|)=1} {
   #GagLine 1 All;
   #If {%IfWord(@SmFilter,%1,%CRLF)=1} {
    #Var SmShips {%Eval(%Pos([,%2)>0)};
    #Var SmFilterTmp1 { and };
    #Var ObjectDirs {};
    #Var ObjectList {%Replace(%2,@SmFilterTmp1,|)};
    #Var ObjectList {%Replace(@ObjectList,~(,)};
    #Var ObjectList {%Replace(@ObjectList,~)~, ,|)};
    #If {@SmShips=0} {
     #Var ObjectList {%Replace(@ObjectList, ,)}
    } {
     #Var ObjectList {%Replace(@ObjectList,] ,])}
    };
    #Var ObjectList {%Replace(@ObjectList,~),)}
   }
  } {
   #If {%IfWord(%1,Charted Space|Galactic Coordinates|Midway Point|Praelor Space|Uncharted Space,|)=1 or (%Pos(Sector ,%1)=1 and %Pos(~(,%2)>0)} {
    #GagLine 1 All
   }
  }
 }
} {SmFilterClass}
#Alias SmFilterProcessData {
 #Exec {#Alarm 0 {
  #Var SmFilterTmp1 {%Replace(%Word(%1,~~~(,2),~),)};
  #Var MyCoordsX {~%Word(~@SmFilterTmp1,~~, ,1)};
  #Var MyCoordsY {~%Word(~@SmFilterTmp1,~~, ,2)};
  #Var MyCoordsZ {~%Word(~@SmFilterTmp1,~~, ,3)};
  #Var ObjectCoords {};
  #Var ObjectDirs {};
  #Var SmSearchTmp1 {~@SmSearchString*};
  #Var SmSearchTmp2 {* ~@SmSearchTmp1};
  #Var SmPriorityTmp1 {~%NumWords(~@SMSPriorityList,|)};
  #Var SmPriorityTmp5 0;
  #Var SmRangeTmp1 0;
  #Var SmFilterTmp2 0;
  #ForAll {~@ObjectList} {
   #Var SmPriorityTmp2 0;
   #Var SmPriorityTmp3 {99};
   #If {~@SmShips=1 and ~%NumWords(~%i,])=2} {
    #Var ObjectTmpString {~%Word(~%i,],2)};
    #Var ObjectCoordsX {~%Trim(~%Word(~@ObjectTmpString,~~~~~~,,1))};
    #Var ObjectCoordsY {~%Trim(~%Word(~@ObjectTmpString,~~~~~~,,2))};
    #Var ObjectCoordsZ {~%Trim(~%Word(~@ObjectTmpString,~~~~~~,,3))};
    #Var ObjectTmpString {~%Word(~%i,],1)] };
    #If {~%IsNumber(~@ObjectCoordsX~@ObjectCoordsY~@ObjectCoordsZ)=1 and (~%Length(~@SmSearchString)=0 or ~@ObjectTmpString=*~@SmSearchTmp1 or ~@ObjectTmpString=*~@SmSearchTmp2)} {
     #If {~%Length(~@SMSPriorityList)=0} {#Var SmPriorityTmp2 {~@SmPriorityTmp1}};
     #While {~@SmPriorityTmp2<~@SmPriorityTmp1} {
      #Math SmPriorityTmp2 {~@SmPriorityTmp2+1};
      #Var SmPriorityTmp4 {~%Word(~@SMSPriorityList,|,~@SmPriorityTmp2)};
      #If {~%Pos(~@SmPriorityTmp4,~@ObjectTmpString)>0} {
       #If {~@SmPriorityTmp2<10} {#Var SmPriorityTmp3 {0~@SmPriorityTmp2}} {#Var SmPriorityTmp3 {~@SmPriorityTmp2}};
       #Var SmPriorityTmp2 {~@SmPriorityTmp1}
      }
     }
    } {
     #Var ObjectTmpString {}
    }
   } {
    #Var ObjectTmpString {};
    #Var ObjectCoordsX {~%Word(~%i,~~,,1)};
    #Var ObjectCoordsY {~%Word(~%i,~~,,2)};
    #Var ObjectCoordsZ {~%Word(~%i,~~,,3)}
   };
   CalculateRelativeNumericDir {~@ObjectCoordsX} {~@ObjectCoordsY} {~@ObjectCoordsZ} {~@MyCoordsX} {~@MyCoordsY} {~@MyCoordsZ};
   #If {~@SmShips=0 or ~%Length(~@ObjectTmpString)>0} {
    #Var SmFilterTmp1 {~%Max(~@RelativeNumericTmpX,~@RelativeNumericTmpY,~@RelativeNumericTmpZ)};
    #If {~@SmPriorityTmp2<0} {
     #Var SmRangeTmp1 {~@SmFilterTmp1}
    };
    #Math SmFilterTmp2 {~@SmFilterTmp2+1};
    #If {~@SmFilterTmp2<10} {
     #Var SmFilterTmp3 {00~@SmFilterTmp2}
    } {
     #If {~@SmFilterTmp2<100} {
      #Var SmFilterTmp3 {0~@SmFilterTmp2}
     } {
      #Var SmFilterTmp3 {~@SmFilterTmp2}
     }
    };
    #If {~@SmFilterTmp1<10} {#Var SmFilterTmp1 {0~@SmFilterTmp1}};
    #Var ObjectDirs {~@ObjectDirs|~@{SmFilterTmp1}^~@SmPriorityTmp3^~@SmFilterTmp3^~@ObjectCoordsX,~@ObjectCoordsY,~@ObjectCoordsZ^~@ObjectTmpString~@RelativeNumericDir}
   }
  };
  #UnVar SmSearchTmp1;
  #UnVar SmSearchTmp2;
  #UnVar SmPriorityTmp1;
  #UnVar SmPriorityTmp2;
  #UnVar SmPriorityTmp3;
  #UnVar SmPriorityTmp4;
  #If {~@SmFilterTmp2=0} {
   #If {~%Length(~@SmSearchString)=0} {
    #Var SmFilterTmp1 {Nothing found}
   } {
    #Var SmFilterTmp1 {~@SmSearchString not found}
   }
  } {
   #If {~@SmCount=1} {
    #Var SmCount 0;
    #If {~%Length(~@SmSearchString)=0} {
     #Var SmFilterTmp1 {~@SmFilterTmp2 ~@SmFilter}
    } {
     #Var SmFilterTmp1 {~@SmFilterTmp2 ~@SmSearchString}
    }
   } {
    #Say {~@SmFilter:} NoVoice;
    #Var ObjectDirs {~%Sort(~%DelNItem(~@ObjectDirs,1),~@AtSaSortOrder)};
    #Var SmFilterTmp1 {~%Word(~@ObjectDirs,^,4)};
    #Var SmFilterTmp2 {r~%Word(~@ObjectDirs,^,1)};
    #If {~@SmFilterTmp2=*"r0#"} {#Var SmFilterTmp2 {~%Copy(~@SmFilterTmp2,3,1)}} {#Var SmFilterTmp2 {~%Copy(~@SmFilterTmp2,2,2)}};
    #If {~@SmFilterTmp2<=~@SMSRange} {
     #If {~@SmFilterTmp2="0"} {
      MirianiSoundPlay Standard Ship\Combat\Intruder~@Ext
     } {
      MirianiSoundPlay Standard General\Misc\Beep10~@Ext
     }
    };
    #UnVar SmRangeTmp1;
    #UnVar SmPriorityTmp5;
    #Var SmFilterTmp1 {};
    #ForAll {~@ObjectDirs} {
     #If {~@SmShips=1} {
      #If {~%IfWord(~%Word(~%i,^,1),00, )=0} {
       #Var SmFilterTmp2 {~%Word(~%i,^,3)};
       #If {~%Copy(~@SmFilterTmp2,1,1)="0"} {#Var SmFilterTmp2 {~%Copy(~@SmFilterTmp2,2,3)}};
       #If {~%Copy(~@SmFilterTmp2,1,1)="0"} {#Var SmFilterTmp2 {~%Copy(~@SmFilterTmp2,2,3)}};
       #If {~@SmShowCoords=1} {
        #Var SmFilterTmp3 {~%Word(~%i,^,4)};
        #Var SmFilterTmp1 {~@SmFilterTmp1~%CRLF~%Word(~@SmFilterTmp3,~~,,1) ~%Word(~@SmFilterTmp3,~~,,2) ~%Word(~@SmFilterTmp3,~~,,3), [~@SmFilterTmp2] ~%Word(~%i,^,5).}
       } {
        #Var SmFilterTmp1 {~@SmFilterTmp1~%CRLF [~@SmFilterTmp2] ~%Word(~%i,^,5).}
       }
      }
     } {
      #If {~@SmShowCoords=1} {
       #Var SmFilterTmp3 {~%Word(~%i,^,4)};
       #Var SmFilterTmp1 {~@SmFilterTmp1~%CRLF ~%Word(~@SmFilterTmp3,~~,,1) ~%Word(~@SmFilterTmp3,~~,,2) ~%Word(~@SmFilterTmp3,~~,,3), ~%Word(~%i,^,5).}
      } {
       #Var SmFilterTmp1 {~@SmFilterTmp1  ~%Word(~%i,^,5).}
      }
     }
    };
    #If {~%Length(~@SmFilterTmp1)>0} {#Var SmFilterTmp1 {~%Copy(~@SmFilterTmp1,3)}}
   }
  };
  #If {~%Length(~@SmFilterTmp1)>0} {
   #If {~@InterruptOnFocus=1} {speech stop};
   #Var SmShowCoords 0;
   #Say {~@SmFilterTmp1}
  }
 }}
}
#Trigger {Alert: Sensor interference detected.} {
 MirianiSoundPlay Standard Ship\Computer\SensorInterference@Ext;
 #GagLine 1 Voice
} {Main|Starship}
